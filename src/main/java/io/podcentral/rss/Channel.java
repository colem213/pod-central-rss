package io.podcentral.rss;

import java.time.Instant;
import java.util.List;

import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import org.eclipse.persistence.oxm.annotations.XmlPath;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIgnore;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperFieldModel.DynamoDBAttributeType;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTyped;

import io.podcentral.config.TableConstants;
import io.podcentral.xml.ItunesExplicitAdapter;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.NonNull;
import lombok.RequiredArgsConstructor;

@NoArgsConstructor
@RequiredArgsConstructor
@DynamoDBTable(tableName = TableConstants.Channel.TABLE_NAME)
@Data
public class Channel {
  @NonNull
  @DynamoDBHashKey
  @DynamoDBAutoGeneratedKey
  private String id;
  private String title;
  private String description;
  private String link;
  @DynamoDBTyped(DynamoDBAttributeType.S)
  private Instant pubDate;
  @DynamoDBTyped(DynamoDBAttributeType.S)
  private Instant lastBuildDate;
  private String language;
  private String copyright;
  private Integer ttl;
  @XmlPath("image/url/text()")
  private String rssImageUrl;
  @XmlPath("image/title/text()")
  private String rssImageTitle;
  @XmlPath("image/link/text()")
  private String rssImageLink;
  @XmlElement(name = "category")
  private String rssCategory;

  @XmlPath("itunes:author/text()")
  private String itunesAuthor;
  @XmlPath("itunes:block/text()")
  private Boolean itunesBlock;
  @XmlPath("itunes:image/@href")
  private String itunesImageUrl;
  @XmlPath("itunes:category[1]")
  private ItunesCategory itunesCategory;
  @XmlJavaTypeAdapter(ItunesExplicitAdapter.class)
  @XmlElement(name = "explicit", namespace = XmlNs.ITUNES)
  private Boolean itunesExplicit;
  @XmlElement(name = "complete", namespace = XmlNs.ITUNES)
  private Boolean itunesIsComplete;
  @XmlPath("itunes:owner/itunes:email/text()")
  private String itunesOwnerEmail;
  @XmlPath("itunes:owner/itunes:name/text()")
  private String itunesOwnerName;
  @XmlElement(name = "subtitle", namespace = XmlNs.ITUNES)
  private String itunesSubtitle;
  @XmlElement(name = "summary", namespace = XmlNs.ITUNES)
  private String itunesSummary;

  @DynamoDBIgnore
  @XmlElement(name = "item")
  private List<Item> items;

}
